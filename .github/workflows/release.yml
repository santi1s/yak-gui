name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-release:
    runs-on: macos-latest
    permissions:
      contents: write
      packages: write
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install Wails
        run: go install github.com/wailsapp/wails/v2/cmd/wails@latest

      - name: Build yak CLI
        run: |
          # Build for multiple architectures
          CGO_ENABLED=0 GOOS=darwin GOARCH=amd64 go build -o yak-darwin-amd64 ./cmd/yak
          CGO_ENABLED=0 GOOS=darwin GOARCH=arm64 go build -o yak-darwin-arm64 ./cmd/yak
          CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o yak-linux-amd64 ./cmd/yak

      - name: Build Wails GUI
        run: |
          cd yak-gui
          wails build --platform darwin/amd64,darwin/arm64
          
      - name: Create Archives
        run: |
          # CLI archives
          tar -czf yak-darwin-amd64.tar.gz yak-darwin-amd64
          tar -czf yak-darwin-arm64.tar.gz yak-darwin-arm64
          tar -czf yak-linux-amd64.tar.gz yak-linux-amd64
          
          # GUI archives
          cd yak-gui/build/bin
          tar -czf ../../../yak-gui-darwin-amd64.tar.gz yak-gui.app
          cd ../../..

      - name: Calculate Checksums
        run: |
          shasum -a 256 *.tar.gz > checksums.txt
          cat checksums.txt

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=tag
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            yak-*.tar.gz
            yak-gui-*.tar.gz
            checksums.txt
          generate_release_notes: true
          draft: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}