---
name: Publish new terraform provider version

on:
  workflow_dispatch:
    inputs:
      release_type:
        description: 'Release type'
        required: true
        type: choice
        options:
          - prerelease
          - prepatch
          - preminor
          - premajor
          - patch
          - minor
          - major

permissions:
  contents: write
  id-token: write

env:
  GO_VERSION: 1.24.3
  GORELEASER_VERSION: '~> v2'

jobs:
  release:
    runs-on: prod-linux-s
    steps:
      - name: Check input
        if: ${{ !contains(fromJson('["patch", "minor", "major", "prepatch", "preminor", "premajor", "prerelease"]'), inputs.release_type) }}
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7
        with:
          script: |
              core.setFailed('Input is not valid')

      - name: Checkout repository
        uses: doctolib/actions/checkout@429fae9c3fefa82b9a7fc0223edfaecc7234c787 # checkout-v0.1.0
        with:
          fetch-depth: 0

      - uses: doctolib/actions/load-secrets@main

      - name: Setup go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5
        with:
          go-version: ${{ env.GO_VERSION }}
          check-latest: true
          cache: false

      - name: Create tag
        id: tag
        uses: zwaldowski/semver-release-action@a00dfb8ec7361325376dafedffcd62c8bdcbb2fb # v3
        with:
          bump: ${{ inputs.release_type }}
          github_token: ${{ github.token }}
          prefix: "provider/v"

      - name: Fetch new tag
        run: git fetch --tags origin

      - name: Configure gpg
        shell: bash
        run: |
          echo "${{ env.GPG_PUBLIC_KEY }}" > public.key
          echo "${{ env.GPG_PRIVATE_KEY }}" > private.key
          gpg --import public.key
          gpg --batch --passphrase '${{ env.GPG_PASSPHRASE }}' --import private.key
          rm public.key private.key

      - name: Execute goreleaser
        uses: goreleaser/goreleaser-action@9c156ee8a17a598857849441385a2041ef570552 # v6
        with:
          distribution: goreleaser-pro
          version: ${{ env.GORELEASER_VERSION }}
          args: release --clean --config .goreleaser.provider.yaml
        env:
          GITHUB_TOKEN: ${{ github.token }}
          GORELEASER_KEY: ${{ env.GORELEASER_LICENSE_KEY }}
